name: Deploy Backend

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Create deployment package
        run: |
          echo "Creating tar file..."
          # Create a list of files to exclude
          echo ".git" > exclude.txt
          echo ".github" >> exclude.txt
          echo "backend.tar.gz" >> exclude.txt
          
          # Use --warning=no-file-changed to ignore file changes
          tar --warning=no-file-changed --exclude-from=exclude.txt -czf backend.tar.gz .
          
          echo "Checking tar file..."
          ls -lh backend.tar.gz

      - name: Deploy to VPS
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
        run: |
          # Set up SSH
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
          echo "Copying files..."
          scp -i ~/.ssh/id_rsa backend.tar.gz $SERVER_USER@$SERVER_IP:~/Alsat-API/
          
          echo "Executing deployment commands..."
          ssh -i ~/.ssh/id_rsa $SERVER_USER@$SERVER_IP << 'EOF'
            cd ~/Alsat-API
            
            echo "Stopping Gunicorn..."
            pkill -f gunicorn || true
            
            echo "Backing up .env..."
            cp .env .env.backup || true
            
            echo "Extracting new files..."
            tar xzf backend.tar.gz
            rm backend.tar.gz
            
            echo "Restoring .env..."
            mv .env.backup .env || true
            
            echo "Setting up virtual environment..."
            python3 -m venv venv || true
            source venv/bin/activate
            
            echo "Installing dependencies..."
            pip install -r requirements.txt
            
            echo "Running migrations..."
            python manage.py migrate

            echo 'Locating .env...'
            export $(cat .env | xargs
            
            echo "Starting Gunicorn..."
            nohup gunicorn config.wsgi:application --bind 127.0.0.1:8000 --workers 3 > gunicorn.log 2>&1 &
            
            echo "Deployment completed"
            
            # Check process status
            ps aux | grep gunicorn
          EOF