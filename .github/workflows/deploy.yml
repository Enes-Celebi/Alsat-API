name: Deploy Backend

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.11'

      - name: Check Python version
        run: |
          python --version
          which python

      - name: Install dependencies
        run: pip install --upgrade pip setuptools wheel

      - name: Debug environment
        run: |
          echo "HOME: $HOME"
          echo "PWD: $PWD"
          env

      - name: Deploy to VPS
        if: always()
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Transfer updated code to the VPS
          scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=accept-new -r * $SERVER_USER@$SERVER_IP:~/Alsat-API/

          # Execute deployment commands on the VPS
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=accept-new $SERVER_USER@$SERVER_IP "bash -c \"
            echo 'Stopping Gunicorn...'
            GUNICORN_PID=\$(pgrep -f 'gunicorn.*config.wsgi:application')
            if [ -n '\$GUNICORN_PID' ]; then
              kill -9 \$GUNICORN_PID
              echo 'Gunicorn stopped.'
            else
              echo 'No Gunicorn process running.'
            fi

            # Navigate to the application directory
            cd ~/Alsat-API

            # Activate virtual environment
            source venv/bin/activate

            # Pull updated environment variables.
            echo 'Loading environment variables...'
            export \$(cat .env | xargs)

            # Install dependencies
            pip install -r requirements.txt

            # Apply database migrations
            echo 'Applying migrations...'
            python manage.py migrate

            # Collect static files
            echo 'Collecting static files...'
            python manage.py collectstatic --noinput

            # pulling updated.env file
            export $(cat .env | xargs)

            # Start Gunicorn
            echo 'Starting Gunicorn...'
            nohup gunicorn --workers 3 --bind 127.0.0.1:8000 config.wsgi:application > gunicorn.log 2>&1 &
            echo 'Backend deployment completed successfully.'
          \""

