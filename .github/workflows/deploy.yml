name: Deploy Backend

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install --upgrade pip setuptools wheel

      - name: Deploy to VPS
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=accept-new $SERVER_USER@$SERVER_IP << 'EOF'
            # Stop Gunicorn process
            echo "Stopping existing Gunicorn processes..."
            GUNICORN_PID=\$(ps aux | grep gunicorn | grep 'config.wsgi:application' | grep -v grep | awk '{print \$2}')
            if [ -n "\$GUNICORN_PID" ]; then
              echo "Killing Gunicorn PID \$GUNICORN_PID"
              kill -9 \$GUNICORN_PID
            else
              echo "No Gunicorn process found."
            fi

            # Navigate to the backend directory
            cd /home/ubuntu/Alsat-API

            # Pull latest code
            git pull origin main

            # Set up virtual environment
            source venv/bin/activate

            # Install dependencies
            pip install -r requirements.txt

            # Run migrations
            python manage.py migrate

            # Collect static files
            python manage.py collectstatic --noinput

            # Start Gunicorn
            echo "Starting Gunicorn..."
            nohup gunicorn --workers 3 --bind 127.0.0.1:8000 config.wsgi:application > gunicorn.log 2>&1 &

            echo "Backend deployment completed."

            # Monitor resources
            echo "Current memory usage:"
            free -h
            echo "Disk usage:"
            df -h
          EOF
